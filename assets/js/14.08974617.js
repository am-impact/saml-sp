(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{412:function(t,s,n){"use strict";n.r(s);var e=n(54),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",[t._v("Configure Login (SSO)")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("Use Case")]),t._v(" "),n("p",[t._v("Configuring login, as documented below, is for frontend use only. If your users are only meant to login via the\nCraft backend/admin/control panel, these configurations aren't needed.")])]),t._v(" "),n("p",[t._v("Set the "),n("code",[t._v("loginPath")]),t._v(" within the Craft general config "),n("code",[t._v("config/general.php")]),t._v(".")]),t._v(" "),n("p",[t._v('After the IDP is saved in Craft, navigate back to the provider. Under the "Configure" tab in Craft, navigate back to the provider.\nThe following code snippets show login configuration options.')]),t._v(" "),n("h2",{attrs:{id:"simple-config"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#simple-config"}},[t._v("#")]),t._v(" Simple Config")]),t._v(" "),n("p",[t._v("If there is only one IDP in the system, you can use the following simple config which is also the default.")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token php language-php"}},[n("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'loginPath'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/sso/login/request'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),n("h2",{attrs:{id:"explicit-config-recommended"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#explicit-config-recommended"}},[t._v("#")]),t._v(" Explicit Config (recommended)")]),t._v(" "),n("p",[t._v("If you want to set multiple IDPs by environment, you should be explicit which provider you want to use.")]),t._v(" "),n("p",[t._v('Under the "Configure" tab there is a "Login/Logout Paths" header which contains read-only properties. Copy the "Login Path"\nand use it as the Craft CMS '),n("code",[t._v("loginPath")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token php language-php"}},[n("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//multi-environment example")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'production'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'loginPath'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/sso/login/request/<production provider uid>'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'dev'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'loginPath'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/sso/login/request/<dev provider uid>'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),n("h3",{attrs:{id:"ðŸ†•-specifying-service-provider-my-provider"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ðŸ†•-specifying-service-provider-my-provider"}},[t._v("#")]),t._v(" ðŸ†• Specifying Service Provider/My Provider")]),t._v(" "),n("p",[t._v("You can now go further and specify the uid to the Service Provider want to ensure SAML uses. To do so, append the Service\nProvider/My Provider.")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token php language-php"}},[n("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//multi-environment example")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'production'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'loginPath'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/sso/login/request/<production IdP provider uid>/<production SP provider uid>'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'dev'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'loginPath'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/sso/login/request/<dev IdP provider uid>/<dev SP provider uid>'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])}),[],!1,null,null,null);s.default=a.exports}}]);